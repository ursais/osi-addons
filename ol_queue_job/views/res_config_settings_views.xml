<odoo>
	<data>
		<!-- Main QueueJob configuration view -->
		<record id="view_queue_job_configuration" model="ir.ui.view">
			<field name="name">Queue Job Settings</field>
			<field name="model">res.config.settings</field>
			<field name="inherit_id" ref="base.res_config_settings_view_form"/>
			<field name="arch" type="xml">
				<xpath expr="//form" position="inside">
					<div class="app_settings_block" data-string="QueueJob" string="Queue Job" data-key="ol_queue_job" groups="ol_base.dev_team">
						<h2>Queue Job</h2>
						<div class="row mt16 o_settings_container" name="ol_queue_job_setting_container">
							<div class="col-12 col-lg-6 o_setting_box">
								<div class="o_setting_left_pane">
									<field name="reverse_identity_key"/>
								</div>
								<div class="o_setting_right_pane">
									<label for="reverse_identity_key"/>
									<div class="text-muted">
										Invert the logic of the Queue Job identity key feature.
										If jobs have unique identifying keys, jobs that are triggered to run (perform) while other jobs exists 
										with the same key that have not yet been run, the run of this earlier job will be skipped.
										This was we can group jobs for similar identity keys while also ensure
										that we run the given functionalities at the latest possible time.
									</div>
								</div>
							</div>
						</div>
					</div>
				</xpath>
			</field>
		</record>
	</data>
</odoo>